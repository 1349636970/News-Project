name: Deploy Front Project to AWS ECS

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'Mona the Octocat'
      home:
        description: 'location'
        required: false
        default: 'The Octoverse'
  pull_request:
    branches: [ main ]
    types: [ closed ]


env:
  AWS_REGION: us-west-1                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: newsproject          # set this to your Amazon ECR repository name
  ECS_CLUSTER: NewsProject                 # set this to your Amazon ECS cluster name

  CONTAINER_NAME: front

jobs:
  front:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Build Application
        working-directory: front
        run: npm install && npm run build
      - name: Move the package to docker dir
        working-directory: front/docker
        run: cp -r ../build .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
        env:
          AWS_REGION: us-east-1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: front
        working-directory: front/docker
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build --build-arg datasourceUser=${{ secrets.DATASOURCEUSERNAME }} --build-arg datasourceURL=${{ secrets.DATASOURCEURL }} --build-arg datasourcePassword=${{ secrets.DATASOURCEPASSWORD }} -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG public.ecr.aws/p4y4q9s1/$ECR_REPOSITORY:$IMAGE_TAG
          docker push public.ecr.aws/p4y4q9s1/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"



      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: a1349636970/news_project

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: front/docker
          push: true
          tags: a1349636970/news_project:front
