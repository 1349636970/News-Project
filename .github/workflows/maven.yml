# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy Project to Microsoft Azure

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'Mona the Octocat'
      home:
        description: 'location'
        required: false
        default: 'The Octoverse'
  pull_request:
    branches: [ main ]
  push:
    branches: [ back,test ]


jobs:
  back:

    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Setup PostgreSQL
        # You may pin to the exact commit or the version.
        #        uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # Version of PostgreSQL to use
          postgresql version: latest
          # POSTGRES_DB - name for the default database that is created
          postgresql db: ${{ secrets.POSTGRES_DB }}
          # POSTGRES_USER - create the specified user with superuser power
          postgresql user: ${{ secrets.DATASOURCEUSERNAME }}
          # POSTGRES_PASSWORD - superuser password
          postgresql password: ${{ secrets.DATASOURCEPASSWORD }}

      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'

      - name: Build Application
        working-directory: back
        env:
          datasourceUser: ${{ secrets.DATASOURCEUSERNAME }}
          datasourceURL: ${{ secrets.DATASOURCEURL_TEST }}
          datasourcePassword: ${{ secrets.DATASOURCEPASSWORD }}
        run: mvn -B package --file pom.xml

      - name: Move the package to docker dir
        working-directory: back/docker
        run: cp ../target/news-project-0.0.1-SNAPSHOT.jar .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: a1349636970/news_project

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: back/docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            datasourceUser=${{ secrets.DATASOURCEUSERNAME }}
            datasourceURL=${{ secrets.DATASOURCEURL }}
            datasourcePassword=${{ secrets.DATASOURCEPASSWORD }}

  front:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Build Application
          working-directory: front
          run: npm install && npm run build
      - name: Move the package to docker dir
          working-directory: front/docker
          run: cp -r ../build .
      - name: Log in to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: a1349636970/news_project

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: front/docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
